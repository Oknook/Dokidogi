## mySQL setting
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/dokidog?serverTimezone=Asia/Seoul
spring.datasource.username=developer
spring.datasource.password=marketO

spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true

spring.jwt.secret=kimmoonkwanhecanrightfullybecalledalegend

## setvlet picture code
servlet.multipart.enabled=true
servlet.multipart.file-size-threshold=0B
# servlet.multipart.location=C:/Users/zxcas/imgtest/ # ziptbook
servlet.multipart.location=C:/Users/SSAFY/imgtest/ # SATBOOK
servlet.multipart.max-file-size=10MB
servlet.multipart.max-request-size=10MB

# ??? ???? GET : /oauth2/authorization/naver
#registration
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=vUqy0Bu7rsgnsZgs11EW
spring.security.oauth2.client.registration.naver.client-secret=MeSVn1rgjy
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

#provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

#registration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=25526902806-o0qoq0iel49ca0sev5vrptq86i6kdmed.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email